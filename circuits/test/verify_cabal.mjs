import path from 'path';

import circom_tester from 'circom_tester';
const wasm_tester = circom_tester.wasm;

import { buildPoseidon } from 'circomlibjs';

// NOTE: necessary for __dirname hack in es module
import { dirname } from 'path';
import { fileURLToPath } from 'url';

const sampleInput = {
  privkey: [
    3337750098259318625n,
    8821854746021967734n,
    14763898429413747298n,
    14106694145162703524n
  ],
  nullifier: 2534043996169215677091121991548563065064944085977132743134611389386011965637n,
    merklePathElements: [
    448252437897058252930414510071318431130073900301n,
    8478304616127837477251100404014650412120332943405331563168493916134649106324n,
    11947256232420878242236238820921747427440343417051115410704903049724291903884n,
    3087963869837292524027820415203253383352578206377063859438517787926736872090n,
    10511967430273825850669463402508806439229665831145372853326098397535884439685n,
    868227038006217426073823056827096090829717711219495906192776865198201881326n,
    21601170239350882727048046078678090054765815687493712280849519719949212724606n,
    6780578572926211828918843234268155468738170775586615095204805427597045143296n,
    9614412938679252889759663324019265913911941818238110514371930174100018084059n,
    3672123210314631796086215546541299386001154027477140848215731158708032014787n
  ],
  merklePathIndices: [
    1,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0,
    1
  ]
}

const sampleOutput = {
  merkleRoot: 4599433203808194985568354012309198395634034548055089906548395627496881193130n,
}


describe("verify cabal e2e", function () {
  this.timeout(1000 * 1000);

  it("handle sampleInput", async () => {
    const __dirname = dirname(fileURLToPath(import.meta.url));
    let circuit = await wasm_tester(path.join(__dirname, "circuits", "verify_cabal_64_4_10.circom"));

    const w = await circuit.calculateWitness(
      sampleInput,
      true
    );

    await circuit.assertOut(w, sampleOutput);
    await circuit.checkConstraints(w);
  });
});
